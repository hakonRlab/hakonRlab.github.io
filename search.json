[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "The Oslo model",
    "section": "",
    "text": "Shiny App under construction\nThe Oslo model can be downloaded as an rds file form\nOslo_model_public"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The Oslo model",
    "section": "",
    "text": "A lymph node invasion prediction model for prostate cancer patients\nSample size calculation was done using the pmsampsize package. None of the evaluated models have published the R2 so this was not included in our sample size calulation.\n\nlibrary(pmsampsize)\nout &lt;- pmsampsize(type = \"b\", cstatistic  = 0.8, parameters = 20, prevalence = 0.25, shrinkage = 0.8)\nout$results_table\n\nImputing missing values with rmsb package\n\nlibrary(rmsb)\n\nset.seed(1999)         \n\nmi &lt;- aregImpute(~ pN + PSAutredn + ISUP + PIRADS345  + mr_cT + MRindexTumorL1 + ProstVolum + dre_cT + BMI + PercPosCores, data=plndbayes_mrpNimp, n.impute=10, nk=4, pr=FALSE, boot.method = 'approximate bayesian')\n\nBayesian logistic regression model development followed many suggestions from the Regression Modeling Strategies by Frank Harrell. Used the rmsb package and the imputed data sets generated in the previous code chunk.\n\nOslomodelFull &lt;- stackMI(formula = pN ~ rcs(PSA,4)*rcs(ProstateVolume,4) + ISUP  + dre_cT  + PIRADS345  + mr_cT + rcs(MRindexTumorL1,4)  + rcs(BMI,4) +\n                              rcs(PercPosCores,4), fitter = blrm, xtrans = mi, data=plndbayes_mrpNimp, iter = 4000, warmup = 2000 , chain = 4, file='OslomodelFull.RDS')\n\n\nplot(anova(OslomodelFull)) # Relative explained variation of variables\n\nOslomodelFinal &lt;- stackMI(formula = pN ~ rcs(PSA,4)*rcs(ProstateVolume,4) + ISUP + mr_cT + rcs(MRindexTumorL1,4), fitter = blrm, xtrans = mi, data=plndbayes_mrpNimp, iter = 4000, warmup = 2000 , chain = 4, file='OslomodellenFinal.RDS')\n\n##### Expected log-predictive density eastimates\n\nloo_full &lt;- OslomodelFull$loo\nloo_final &lt;- OslomodelFinal$loo\n\nprint(loo_compare(loo_full, loo_final))\n\n\nelpd_tab &lt;- data.frame(\n  est = c(\"elpd_loo\", \"p_loo\", \"looic\"),\n  all = c(loo_full$elpd_loo, loo_full$p_loo, loo_full$looic),\n  all_se = c(loo_alle$se_elpd_loo, loo_alle$se_p_loo, loo_alle$se_looic)\n)\n\nnames(elpd_tab) &lt;- c(\"\", \"Estimates\", \"S.E\")\n\nprojection predictive feature selection using the projpred package\n\nlibrary(projpred)\n\noslo_ref &lt;- get_refmodel(OslomodelFull)\n\ncvvs_imp1 &lt;- cv_varsel(oslo_ref,\n                       validate_search = FALSE,\n                       method = \"forward\",\n                       ncluster_pred = 20,\n                       nterms_max = 20,\n                       verbose = FALSE)\n\nplot(cvvs_imp1, stats = \"mlpd\", ranking_ntrems_max = NA)\n\n\ncvvs_imp2 &lt;- cv_varsel(oslo_ref,\n                       cv_method = \"kfold\",\n                       method =\"forward\",\n                       k=10,\n                       ncluster_pred = 20,\n                       nterms_max = 9,\n                       parallel = TRUE,\n                       verbose = FALSE)\n\nplot(cvvs_imp2, stats = \"mlpd\", deltas  = TRUE)\n\nsuggest_size(cvvs_imp2)\n\nThe Evaluating a logistic regression based prediction tool in R by Darren Dahly was used with minor modifications of the distribution plot.\n\n    g2 &lt;- ggplot(data, aes(x = pred_var, fill = alive)) +\n      geom_histogram(aes(fill = alive), bins = 200) +\n      geom_text(aes(x=.5, y=8,label=\"pN1\", color = \"red\")) +\n       geom_text(aes(x=.3, y=8,label=\"pN0\", color = \"blue\")) +\n      scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +\n      xlab(\"Predicted Probability\") +\n      ylab(\"count\") +\n      theme_minimal() +\n      scale_y_continuous(breaks = c(0,10,20)) +\n      theme(panel.grid.minor = element_blank(), legend.position = \"none\")\n\n\n\nThe resources at Decission Curve Analyses was used as a guideline for the net reduction plot.\n\nlibrary(dcurves)\nlibrary(plotly)\nlibrary(ggplot2)\n\noslo &lt;- dca(pN ~ predprob + bri2019 + bri2019recal + bri2019refit, data = data_pN_predprob,\n    thresholds = seq(0, 0.4, 0.01),\n    label = list(predprob = \"Oslo model\",\n                 bri2019 = \"Briganti 2019\",\n                 bri2019recal = \"Briganti 2019 recalibrated\",\n                 bri2019refit = \"Briganti 2019 refited\")\n    ) %&gt;% \n  net_intervention_avoided() %&gt;% \n  plot(smooth = TRUE, show_ggplot_code = TRUE)+\n  ggplot2::coord_cartesian(ylim = c(-0.05, 0.4))+\n  ggplot2::theme(text = element_text(size=16))\n \nggplotly(oslo)\n\n\n\nThe scripts bellow are the ones used to calculate the predictied probalitities o f the OUH cohort when evaluating the MSKCC, Briganti 2012 and Briganti 2019 models\nMSKCC nomogram\n\n#last updated December 15 2023\n\nknot1 &lt;- 0.2 #PSAPreopKnot1\nknot2 &lt;- 4.8 #PSAPreopKnot2\nknot3 &lt;- 7.33 #PSAPreopKnot3\nknot4 &lt;- 307 #PSAPreopKnot3\n\n\n#Calculating the PSAsp1var and PSAsp2var variables.\n\nMSKCCcohort1$PSAsp1var &lt;- \"\"\nMSKCCcohort1$PSAsp1var &lt;- as.numeric(MSKCCcohort1$PSAsp1var)\nfor (i in 1:nrow(MSKCCcohort1)){\n  MSKCCcohort1[i, \"PSAsp1var\"] &lt;- max(MSKCCcohort1[i, \"PSAutredn\"] - knot1,0)^3 - max(MSKCCcohort1[i,   \"PSAutredn\"] - knot3, 0)^3 * ((knot4 - knot1)/(knot4 - knot3))+ max(MSKCCcohort1[i, \"PSAutredn\"] - knot4, 0)^3 *((knot3 -knot1)/(knot4 - knot3))\n}\n\nMSKCCcohort1$PSAsp2var &lt;- \"\"\nMSKCCcohort1$PSAsp2var &lt;- as.numeric(MSKCCcohort1$PSAsp2var)\n\nfor (i in 1:nrow(MSKCCcohort1)){MSKCCcohort1[i, \"PSAsp2var\"] &lt;- max(MSKCCcohort1[i, \"PSAutredn\"] - knot2,0)^3 - max(MSKCCcohort1[i, \"PSAutredn\"] - knot3, 0)^3 * ((knot4 - knot2)/(knot4 - knot3))+\nmax(MSKCCcohort1[i, \"PSAutredn\"] - knot4, 0)^3 *((knot3 -knot2)/(knot4 - knot3))\n}\n\n#last updated December 15 2023\n\nInterceptMSKCC &lt;- -5.9587\nAge &lt;- 0.0079\nPSA &lt;- 0.1754\nPSAspline1 &lt;- -0.0011\nPSAspline2 &lt;- 0.003\nBioGGG2 &lt;- 1.5255\nBioGGG3 &lt;- 2.5725\nBioGGG4 &lt;- 2.7054\nBioGGG5 &lt;- 3.4228\ncT2A &lt;- 0.2895\ncT2B &lt;- 0.6206\ncT2C &lt;- 0.9285\ncT3 &lt;- 1.2689\n\n\n\nMSKCCcohort1$MSKCCprob &lt;- \"\"\nMSKCCcohort1$MSKCCprob &lt;- as.numeric(MSKCCcohort1$MSKCCprob)\n\nfor (i in 1:nrow(MSKCCcohort1)){  \n  MSKCCcohort1[i, \"MSKCCprob\"] &lt;- InterceptMSKCC + Age*MSKCCcohort1[i, \"Age\"] + PSA*MSKCCcohort1[i, \"PSA\"] + PSAspline1*MSKCCcohort1[i, \"PSAsp1var\"] + PSAspline2*MSKCCcohort1[i, \"PSAsp2var\"] + BioGGG2*MSKCCcohort1[i, \"BioGGG2\"] + BioGGG3*MSKCCcohort1[i, \"BioGGG3\"] + BioGGG4*MSKCCcohort1[i, \"BioGGG4\"] + BioGGG5*MSKCCcohort1[i, \"BioGGG5\"] + cT2A*MSKCCcohort1[i, \"cT2a\"] + cT2B*MSKCCcohort1[i, \"cT2b\"] + cT2C*MSKCCcohort1[i, \"cT2c\"] + cT3*MSKCCcohort1[i, \"cT3\"] \n \n}\n\nMSKCCcohort1$MSKCCprobpred &lt;- \"\"\nMSKCCcohort1$MSKCCprobpred &lt;- as.numeric(MSKCCcohort1$MSKCCprobpred)\n\nfor (i in 1:nrow(MSKCCcohort1)){\n  MSKCCcohort1[i, \"MSKCCprobpred\"] &lt;-  exp(MSKCCcohort1[i,\"MSKCCprob\"]) / (1 + exp(MSKCCcohort1[i,\"MSKCCprob\"])) \n}\n\n####\n\nBriganti 2012, we used the coeficients from Diamand et al.\n\nIntercept = -5.3234\nPSA = 0.0361\nbricT2 = 0.5874\nbricT3 = 1.9940\nprimgleason = 1.2954 \nsekgleason = 0.3722\nCorepos = 0.0269\n\nbriganti2012$Brigantiprob &lt;- \"\"\nbriganti2012$Brigantiprob &lt;- as.numeric(briganti2012$Brigantiprob)\n\nfor (i in 1:nrow(briganti2012)){  \n briganti2012[i, \"Brigantiprob\"] &lt;- InterceptBriganti  + PSABriganti*briganti2012[i, \"PSA\"]  + bricT2*briganti2012[i, \"bricT2\"] + bricT3*briganti2012[i, \"bricT3\"] + primgleason*briganti2012[i, \"primgleason\"] + sekgleason*briganti2012[i, \"sekgleason\"] + Corepos*briganti2012[i, \"PercPosCores\"] \n \n}\n\nbriganti2012$Brigantiprobpred &lt;- \"\"\nbriganti2012$Brigantiprobpred &lt;- as.numeric(briganti2012$Brigantiprobpred)\n\nfor (i in 1:nrow(briganti2012)){\n  briganti2012[i, \"Brigantiprobpred\"] &lt;-  exp(briganti2012[i,\"Brigantiprob\"]) / (1 + exp(briganti2012[i,\"Brigantiprob\"])) \n}\n\nBriganti 2019 (link to reference)\n\nIntercept = -4.5974\nPSA = 0.0416\nECE = 1.2214\nSVI = 1.4672\nmmdiam = 0.0311\nBioGGG3 = 1.2032\nBioGGG4 = 1.8063\nCorepos = 0.0119\n\nbriganti2019$Brigantiprob &lt;- \"\"\nbriganti2019$Brigantiprob &lt;- as.numeric(briganti2019$Brigantiprob)\n\nfor (i in 1:nrow(briganti2019)){  \n  briganti2019[i, \"Brigantiprob\"] &lt;- InterceptBriganti  + PSABriganti*briganti2019[i, \"PSA\"]  + ECE*briganti2019[i, \"ECE\"] + SVI*briganti2019[i, \"SVI\"] + mmdiam*briganti2019[i, \"mmdiam\"] + BriGG3*briganti2019[i, \"BioGGG4\"] + BriGG4*briganti2019[i, \"BioGGG5\"] + Corepos*briganti2019[i, \"Corepos\"] \n \n}\n\nbriganti2019$Brigantiprobpred &lt;- \"\"\nbriganti2019$Brigantiprobpred &lt;- as.numeric(briganti2019$Brigantiprobpred)\n\nfor (i in 1:nrow(briganti2019)){\n  briganti2019[i, \"Brigantiprobpred\"] &lt;-  exp(briganti2019[i,\"Brigantiprob\"]) / (1 + exp(briganti2019[i,\"Brigantiprob\"])) \n}\n\n\n##############\n\n# Recalibrated coeficients\nIntercept = -4.231\nPSA = 0.030 \nECE = 0.900\nSVI = 1.081\nmmdiam = 0.0229 \nBioGGGG3 = 0.886 \nBioGGG4 = 1.331 \nCorepos = 0.010\n\n# Coeficients after refiting the model\nIntercept = -3.542\nPSA = 0.007 \nECE = 0.927\nSVI = 2.203\nmmdiam = 0.017 \nBioGGG3 = 0.239\nBioGGG4 = 0.691 \nCorepos = 0.010"
  }
]